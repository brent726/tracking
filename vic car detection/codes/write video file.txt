#include "stdafx.h"
#include "opencv2/highgui/highgui.hpp"
#include <iostream>
#include <cv.h>
#include <highgui.h>

using namespace cv;
using namespace std;

int main(int argc, char* argv[])
{
    VideoCapture cap(1); // open the video camera no. 0

    if (!cap.isOpened())  // if not success, exit program
    {
        cout << "Cannot open the video cam" << endl;
        return -1;
    }

   double dWidth = cap.get(CV_CAP_PROP_FRAME_WIDTH); //get the width of frames of the video
   double dHeight = cap.get(CV_CAP_PROP_FRAME_HEIGHT); //get the height of frames of the video

    cout << "Frame size : " << dWidth << " x " << dHeight << endl;

    namedWindow("MyVideo",CV_WINDOW_AUTOSIZE); //create a window called "MyVideo"

	Size frameSize(static_cast<int>(dWidth),static_cast<int>(dHeight));

	VideoWriter oVideoWriter("E:\\Visual Studio Projects\\videos\\newvideo10-14.avi",CV_FOURCC('P','I','M','1'),20,frameSize,true);

	if(!oVideoWriter.isOpened())
	{
		cout << "ERROR: failed to write video file" << endl;
		return -1;
	}


    while (1)
    {
        Mat frame;

        bool bSuccess = cap.read(frame); // read a new frame from video

        if (!bSuccess) //if not success, break loop
        {
             cout << "Cannot read a frame from video stream" << endl;
             break;
        }
			
		IplImage* img=cvCloneImage(&(IplImage)frame);
		cvSmooth(img, img, CV_GAUSSIAN,3,3);
		IplImage* imgGrayScale = cvCreateImage(cvGetSize(img), 8, 1); 
		cvCvtColor(img,imgGrayScale,CV_BGR2GRAY);
		cvThreshold(imgGrayScale,imgGrayScale,100,255,CV_THRESH_BINARY_INV);
		cvNamedWindow("Thresholded Image");
		cvShowImage("Thresholded Image",imgGrayScale);

		oVideoWriter.write(frame);

        imshow("MyVideo", frame); //show the frame in "MyVideo" window

        if (waitKey(30) == 27) //wait for 'esc' key press for 30ms. If 'esc' key is pressed, break loop
       {
            cout << "esc key is pressed by user" << endl;
            break; 
       }
		else if (waitKey(30) == 13) 
       {
            cout << "capture image" << endl;
            cvSaveImage("E:\\Visual Studio Projects\\pictures\\thresh.jpg", imgGrayScale, 0);
       }
    }
    return 0;

}